(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3309],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=a,h=d["".concat(c,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(h,i(i({ref:t},p),{},{components:n})):r.createElement(h,i({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5184:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return s},metadata:function(){return c},toc:function(){return l},default:function(){return u}});var r=n(2122),a=n(9756),o=(n(7294),n(3905)),i=["components"],s={sidebar_position:3},c={unversionedId:"cw-plus/cw3/cw3-flex-spec",id:"cw-plus/cw3/cw3-flex-spec",isDocsHomePage:!1,title:"CW3 Flexible Multisig",description:"cw3-flex-multisig source code//github.com/CosmWasm/cosmwasm-plus/tree/master/contracts/cw3-flex-multisig",source:"@site/docs/cw-plus/cw3/cw3-flex-spec.md",sourceDirName:"cw-plus/cw3",slug:"/cw-plus/cw3/cw3-flex-spec",permalink:"/0.14/cw-plus/cw3/cw3-flex-spec",editUrl:"https://github.com/CosmWasm/docs/edit/master/docs/cw-plus/cw3/cw3-flex-spec.md",version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"defaultSidebar",previous:{title:"CW3 Fixed Multisig",permalink:"/0.14/cw-plus/cw3/cw3-fixed-spec"},next:{title:"CW4 Spec: Group Members",permalink:"/0.14/cw-plus/cw4/spec"}},l=[{value:"Init",id:"init",children:[]},{value:"Handle Process",id:"handle-process",children:[]}],p={toc:l};function u(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"cw3-flex-multisig source code: ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/CosmWasm/cosmwasm-plus/tree/master/contracts/cw3-flex-multisig"},"https://github.com/CosmWasm/cosmwasm-plus/tree/master/contracts/cw3-flex-multisig")),(0,o.kt)("p",null,"This builds on ",(0,o.kt)("a",{parentName:"p",href:"/0.14/cw-plus/cw3/cw3-fixed-spec"},"cw3-fixed-multisig")," with a more\npowerful implementation of the ",(0,o.kt)("a",{parentName:"p",href:"/0.14/cw-plus/cw3/spec"},"cw3 spec"),".\nIt is a multisig contract that is backed by a\n",(0,o.kt)("a",{parentName:"p",href:"/0.14/cw-plus/cw4/spec"},"cw4 (group)")," contract, which independently\nmaintains the voter set."),(0,o.kt)("p",null,"This provides 2 main advantages:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"You can create two different multisigs with different voting thresholds\nbacked by the same group. Thus, you can have a 50% vote, and a 67% vote\nthat always use the same voter set, but can take other actions."),(0,o.kt)("li",{parentName:"ul"},"TODO: It allows dynamic multisig groups. Since the group can change,\nwe can set one of the multisigs as the admin of the group contract,\nand the")),(0,o.kt)("p",null,"In addition to the dynamic voting set, the main difference with the native\nCosmos SDK multisig, is that it aggregates the signatures on chain, with\nvisible proposals (like ",(0,o.kt)("inlineCode",{parentName:"p"},"x/gov")," in the Cosmos SDK), rather than requiring\nsigners to share signatures off chain."),(0,o.kt)("h2",{id:"init"},"Init"),(0,o.kt)("p",null,"The first step to create such a multisig is to instantiate a cw4 contract\nwith the desired member set. For now, this only is supported by\n",(0,o.kt)("a",{parentName:"p",href:"/0.14/cw-plus/cw4/cw4-group-spec"},"cw4-group"),", but we will add a token-weighted group contract\n(TODO)."),(0,o.kt)("p",null,"If you create a ",(0,o.kt)("inlineCode",{parentName:"p"},"cw4-group")," contract and want a multisig to be able\nto modify its own group, do the following in multiple transactions:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"init cw4-group, with your personal key as admin"),(0,o.kt)("li",{parentName:"ul"},"init a multisig pointing to the group"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"AddHook{multisig}")," on the group contract"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"UpdateAdmin{multisig}")," on the group contract")),(0,o.kt)("p",null,"This is the current practice to create such circular dependencies,\nand depends on an external driver (hard to impossible to script such a\nself-deploying contract on-chain). (TODO: document better)."),(0,o.kt)("p",null,"When creating the multisig, you must set the required weight to pass a vote\nas well as the max/default voting period. (TODO: allow more threshold types)"),(0,o.kt)("h2",{id:"handle-process"},"Handle Process"),(0,o.kt)("p",null,'First, a registered voter must submit a proposal. This also includes the\nfirst "Yes" vote on the proposal by the proposer. The proposer can set\nan expiration time for the voting process, or it defaults to the limit\nprovided when creating the contract (so proposals can be closed after several\ndays).'),(0,o.kt)("p",null,'Before the proposal has expired, any voter with non-zero weight can add their\nvote. Only "Yes" votes are tallied. If enough "Yes" votes were submitted before\nthe proposal expiration date, the status is set to "Passed".'),(0,o.kt)("p",null,'Once a proposal is "Passed", anyone may submit an "Execute" message. This will\ntrigger the proposal to send all stored messages from the proposal and update\nit\'s state to "Executed", so it cannot run again. (Note if the execution fails\nfor any reason - out of gas, insufficient funds, etc - the state update will\nbe reverted, and it will remain "Passed", so you can try again).'),(0,o.kt)("p",null,'Once a proposal has expired without passing, anyone can submit a "Close"\nmessage to mark it closed. This has no effect beyond cleaning up the UI/database.'))}u.isMDXComponent=!0}}]);