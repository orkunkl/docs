(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1089],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=s(n),f=o,m=d["".concat(l,".").concat(f)]||d[f]||u[f]||a;return n?r.createElement(m,i(i({ref:t},p),{},{components:n})):r.createElement(m,i({ref:t},p))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5352:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return c},metadata:function(){return l},toc:function(){return s},default:function(){return u}});var r=n(2122),o=n(9756),a=(n(7294),n(3905)),i=["components"],c={sidebar_position:1},l={unversionedId:"learn/frontend-dapp/intro",id:"learn/frontend-dapp/intro",isDocsHomePage:!1,title:"Introduction",description:"In this tutorial you will learn how to build a CosmJS based dApp. The example dApp will be a balance checker that will allow you to see your native tokens and the CW20 tokens of the contract with the address you enter.",source:"@site/docs/learn/frontend-dapp/intro.md",sourceDirName:"learn/frontend-dapp",slug:"/learn/frontend-dapp/intro",permalink:"/0.14/learn/frontend-dapp/intro",editUrl:"https://github.com/CosmWasm/docs/edit/master/docs/learn/frontend-dapp/intro.md",version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"defaultSidebar",previous:{title:"Introduction",permalink:"/0.14/learn/name-service/intro"},next:{title:"Cosmic dApp logic",permalink:"/0.14/learn/frontend-dapp/cosmicdapp-logic"}},s=[{value:"Views",id:"views",children:[{value:"Login",id:"login",children:[]},{value:"Native balance",id:"native-balance",children:[]},{value:"Balance of a CW20 contract",id:"balance-of-a-cw20-contract",children:[]},{value:"Error for address with no contract",id:"error-for-address-with-no-contract",children:[]}]},{value:"Setup environment",id:"setup-environment",children:[]}],p={toc:s};function u(e){var t=e.components,c=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},p,c,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"In this tutorial you will learn how to build a ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/cosmos/cosmjs"},"CosmJS")," based dApp. The example dApp will be a balance checker that will allow you to see your native tokens and the CW20 tokens of the contract with the address you enter."),(0,a.kt)("h2",{id:"views"},"Views"),(0,a.kt)("p",null,"It will look like this:"),(0,a.kt)("h3",{id:"login"},"Login"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"image",src:n(4190).Z})),(0,a.kt)("h3",{id:"native-balance"},"Native balance"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"image",src:n(2624).Z})),(0,a.kt)("h3",{id:"balance-of-a-cw20-contract"},"Balance of a CW20 contract"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"image",src:n(6002).Z})),(0,a.kt)("h3",{id:"error-for-address-with-no-contract"},"Error for address with no contract"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"image",src:n(2327).Z})),(0,a.kt)("h2",{id:"setup-environment"},"Setup environment"),(0,a.kt)("p",null,"We recommend to use ",(0,a.kt)("a",{parentName:"p",href:"https://code.visualstudio.com"},"Visual Studio Code")," but this tutorial should be easily followed with any other text editor."),(0,a.kt)("p",null,"You should download the latest release of the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/CosmWasm/dApps"},(0,a.kt)("inlineCode",{parentName:"a"},"CosmWasm/dApps"))," monorepo using your preferred method."))}u.isMDXComponent=!0},6002:function(e,t,n){"use strict";t.Z=n.p+"assets/images/balance-cw20-72a7a41bcd6a92e7f9dc28b2b0fe4863.png"},2327:function(e,t,n){"use strict";t.Z=n.p+"assets/images/balance-error-2b5e1d9e86cfac6405a24d7ab68d3709.png"},2624:function(e,t,n){"use strict";t.Z=n.p+"assets/images/balance-native-cd51ddbca284098ae81b2365ac4083c5.png"},4190:function(e,t,n){"use strict";t.Z=n.p+"assets/images/login-7e2c08327a417c05bcf775b0e77490da.png"}}]);